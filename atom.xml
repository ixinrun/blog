<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>乂星人 - 一个程序员的故事，专注移动互联网</title>
  
  
  <link href="https://blog.ixin.run/atom.xml" rel="self"/>
  
  <link href="https://blog.ixin.run/"/>
  <updated>2021-12-28T14:26:07.606Z</updated>
  <id>https://blog.ixin.run/</id>
  
  <author>
    <name>乂星人</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DO AS ONE WISHES</title>
    <link href="https://blog.ixin.run/posts/0/"/>
    <id>https://blog.ixin.run/posts/0/</id>
    <published>2098-12-31T16:00:00.000Z</published>
    <updated>2021-12-28T14:26:07.606Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;一个合格的程序员都有自己的风格：执着、追求、向上、完美主义、无所畏惧、高傲但不自大、也有风骚也有爱、狼性编程并不只是为了工作…终极梦想就是随心所欲，凤凰涅槃。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;在其位谋其职，在我还没有想到下条路的时候或者现阶段</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>轻松玩转Flutter混合开发</title>
    <link href="https://blog.ixin.run/posts/1631175663/"/>
    <id>https://blog.ixin.run/posts/1631175663/</id>
    <published>2021-09-09T08:20:27.000Z</published>
    <updated>2021-12-28T14:26:07.607Z</updated>
    
    
    <summary type="html">&lt;p&gt;Flutter自推出以来备受欢迎，国内最先引入使用的是闲鱼团队的闲鱼App。好多同学都知道Flutter是一套跨平台UI框架，最常见的运用则是一套代码同时可以编译出Android、iOS、H5等多种形式，但是实际开发中一般只有新项目我们才会用flutter进行直接编译打包，针对老项目谁都也不愿意完全推翻再用flutter重新写一遍，更多的是采用混合开发模式，即将flutter的产物嵌入到Android或者iOS项目中一同编译。本文我就总结一下Flutter混合开发的那些事。&lt;/p&gt;</summary>
    
    
    
    <category term="Flutter" scheme="https://blog.ixin.run/categories/Flutter/"/>
    
    
    <category term="flutter" scheme="https://blog.ixin.run/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>为什么用OkHttp</title>
    <link href="https://blog.ixin.run/posts/1629967595/"/>
    <id>https://blog.ixin.run/posts/1629967595/</id>
    <published>2021-08-26T08:44:38.000Z</published>
    <updated>2021-12-28T14:26:07.606Z</updated>
    
    
    <summary type="html">&lt;p&gt;提起Android上常用的网络框架，太多太多，从早前的HttpClient，到被Google认定的HttpUrlConnection，还有万剑齐发的Volley，但是伴隨后来的大Boss——OkHttp的出现，似乎前边的曾经不可一世的网络框架都沉寂了，为什么OkHttp这么牛，牛在哪里呢，本文就着重说一下。&lt;/p&gt;</summary>
    
    
    
    <category term="Android" scheme="https://blog.ixin.run/categories/Android/"/>
    
    
    <category term="网络三件套" scheme="https://blog.ixin.run/tags/%E7%BD%91%E7%BB%9C%E4%B8%89%E4%BB%B6%E5%A5%97/"/>
    
  </entry>
  
  <entry>
    <title>常见算法解题思路</title>
    <link href="https://blog.ixin.run/posts/1621934400/"/>
    <id>https://blog.ixin.run/posts/1621934400/</id>
    <published>2021-05-25T09:19:41.000Z</published>
    <updated>2021-12-28T14:26:07.607Z</updated>
    
    
    <summary type="html">&lt;p&gt;个人总结的一些算法，及解题思路。&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="https://blog.ixin.run/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://blog.ixin.run/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Android注解处理器APT技术探究</title>
    <link href="https://blog.ixin.run/posts/1619764951/"/>
    <id>https://blog.ixin.run/posts/1619764951/</id>
    <published>2021-04-30T06:42:31.000Z</published>
    <updated>2021-12-28T14:26:07.606Z</updated>
    
    
    <summary type="html">&lt;p&gt;说起注解处理器，Android程序员都比较兴奋，因为在开发过程中我们常用的一些明星框架，例如&lt;code&gt;ButterKnife&lt;/code&gt;、&lt;code&gt;EventBus&lt;/code&gt;、&lt;code&gt;Dagger&lt;/code&gt;以及阿里的&lt;code&gt;ARouter&lt;/code&gt;都采用是注解处理器技术。简单注解，简单的api，超高的性能等诸多优点，本文就带你从整体出发探讨以下APT技术是怎么玩的。&lt;/p&gt;</summary>
    
    
    
    <category term="Android" scheme="https://blog.ixin.run/categories/Android/"/>
    
    
    <category term="APT" scheme="https://blog.ixin.run/tags/APT/"/>
    
  </entry>
  
  <entry>
    <title>Android组件化可行性方案探讨和思考</title>
    <link href="https://blog.ixin.run/posts/1618992460/"/>
    <id>https://blog.ixin.run/posts/1618992460/</id>
    <published>2021-04-21T08:06:46.000Z</published>
    <updated>2021-12-28T14:26:07.607Z</updated>
    
    
    <summary type="html">&lt;p&gt;其实组件化我之前已经谈过了，本文主要探讨一下组件化搭建的有哪些形式，这也算是一种学习过程。&lt;/p&gt;</summary>
    
    
    
    <category term="Android" scheme="https://blog.ixin.run/categories/Android/"/>
    
    
    <category term="组件化" scheme="https://blog.ixin.run/tags/%E7%BB%84%E4%BB%B6%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>浅入深出了解Android传感器</title>
    <link href="https://blog.ixin.run/posts/1617159391/"/>
    <id>https://blog.ixin.run/posts/1617159391/</id>
    <published>2021-03-31T02:55:54.000Z</published>
    <updated>2021-03-31T16:22:55.145Z</updated>
    
    
    <summary type="html">&lt;p&gt;提到手机上的传感器大家应该都不陌生，比如说方向传感器、陀螺仪、重力传感器、光线传感器等。现在的手机基本集成少说有十几种传感器，面向将来的人工智能，这块知识也是我们必备的。&lt;/p&gt;</summary>
    
    
    
    <category term="Android" scheme="https://blog.ixin.run/categories/Android/"/>
    
    
    <category term="传感器" scheme="https://blog.ixin.run/tags/%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Java类加载机制</title>
    <link href="https://blog.ixin.run/posts/1616149094/"/>
    <id>https://blog.ixin.run/posts/1616149094/</id>
    <published>2021-03-19T10:18:14.000Z</published>
    <updated>2021-03-31T16:22:55.154Z</updated>
    
    
    <summary type="html">&lt;p&gt;我们知道Class文件中描述的各种信息最终都需要加载到虚拟机中之后才能运行和使用。而虚拟机如何加载这些Class文件？Class文件中的信息进入到虚拟机后会发生什么变化？本文就带你认识一下Java的类加载机制，相信你看过本文之后一切都清楚明了了。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.ixin.run/categories/Java/"/>
    
    
    <category term="类加载机制" scheme="https://blog.ixin.run/tags/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>浅谈Android编译打包流程</title>
    <link href="https://blog.ixin.run/posts/1615946471/"/>
    <id>https://blog.ixin.run/posts/1615946471/</id>
    <published>2021-03-17T02:00:44.000Z</published>
    <updated>2021-03-31T16:22:55.145Z</updated>
    
    
    <summary type="html">&lt;p&gt;作为移动开发的我们平时关注更多的关注业务上的实现和技术的提升，而技术的提升也是为了更好的维护好我们的业务。但是我们很少关注有关apk的一些问题：一个apk的内部构造有哪些？一个apk是怎么从我们的java代码或者kotlin工程编译出来的？以及apk编译需要哪些步骤？如果把apk的编译过程研究透了，那将会继续拓宽我们的技术栈。本文就浅谈一下Android项目编译成apk的内部流程。&lt;/p&gt;</summary>
    
    
    
    <category term="Android" scheme="https://blog.ixin.run/categories/Android/"/>
    
    
    <category term="系统" scheme="https://blog.ixin.run/tags/%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>谈谈对Dex文件的认识</title>
    <link href="https://blog.ixin.run/posts/1615903557/"/>
    <id>https://blog.ixin.run/posts/1615903557/</id>
    <published>2021-03-16T14:05:57.000Z</published>
    <updated>2021-03-31T16:22:55.146Z</updated>
    
    
    <summary type="html">&lt;p&gt;针对dex文件，做android开发的应该都见过，没见过也听说过，至少听说过65536吧，本篇文章就带大家认识以下dex。&lt;/p&gt;</summary>
    
    
    
    <category term="Android" scheme="https://blog.ixin.run/categories/Android/"/>
    
    
    <category term="系统" scheme="https://blog.ixin.run/tags/%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Jvm、Dalvik和Art的区别你知道吗</title>
    <link href="https://blog.ixin.run/posts/1615783515/"/>
    <id>https://blog.ixin.run/posts/1615783515/</id>
    <published>2021-03-15T04:45:15.000Z</published>
    <updated>2021-03-31T16:22:55.142Z</updated>
    
    
    <summary type="html">&lt;p&gt;早前android给人的印象是卡，慢，无；但是从6.0依赖的手机似乎人们不再提android的这些诟病了，无非来一句“不高端”。知道什么原因吗？有同学说，android一个劲的提升内存，和CPU的升级，但这只是其中的表象，为什么会提升内存呢？认识一下Jvm、Dalvik和Art，你将一切都明白了。&lt;/p&gt;</summary>
    
    
    
    <category term="Android" scheme="https://blog.ixin.run/categories/Android/"/>
    
    
    <category term="系统" scheme="https://blog.ixin.run/tags/%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>HttpURLConnection使用细节总结</title>
    <link href="https://blog.ixin.run/posts/1615708883/"/>
    <id>https://blog.ixin.run/posts/1615708883/</id>
    <published>2021-03-14T08:01:05.000Z</published>
    <updated>2021-03-31T16:22:55.142Z</updated>
    
    
    <summary type="html">&lt;p&gt;Android上网络请求框架有很多，有HttpURLConnection、HttpClient、android-async-http、volley、(Retrofit+Okhttp)等。&lt;/p&gt;
&lt;p&gt;android sdk早期默认支持HttpClient和HttpURLConnection，但在android 6.0的时候就完全抛弃了HttpClient，原因是HttpClient相对HttpURLConnection开发更加繁杂，糟糕的api和糟糕的文档等诸多诟病。&lt;/p&gt;</summary>
    
    
    
    <category term="Android" scheme="https://blog.ixin.run/categories/Android/"/>
    
    
    <category term="网络编程" scheme="https://blog.ixin.run/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Android多渠道打包</title>
    <link href="https://blog.ixin.run/posts/1615692625/"/>
    <id>https://blog.ixin.run/posts/1615692625/</id>
    <published>2021-03-14T03:30:13.000Z</published>
    <updated>2021-03-31T16:22:55.125Z</updated>
    
    
    <summary type="html">&lt;p&gt;Android的签名打包是每个android开发者都会的基本技能，但是针对多渠道打包需要当前app业务支撑，有些app是无需上线的到各个应用市场的，或者说公司不需要这些分发做定制化，这就导致可能接触不到多渠道打包，本文就记录一下Android上多渠道打包的那些事。&lt;/p&gt;</summary>
    
    
    
    <category term="Android" scheme="https://blog.ixin.run/categories/Android/"/>
    
    
    <category term="多渠道打包" scheme="https://blog.ixin.run/tags/%E5%A4%9A%E6%B8%A0%E9%81%93%E6%89%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>HTTPS协议原理必知必会</title>
    <link href="https://blog.ixin.run/posts/1615560323/"/>
    <id>https://blog.ixin.run/posts/1615560323/</id>
    <published>2021-03-12T14:45:07.000Z</published>
    <updated>2021-03-31T16:22:55.162Z</updated>
    
    
    <summary type="html">&lt;p&gt;前边的一篇文章&lt;a href=&quot;./posts/1615211970&quot;&gt;《HTTP协议原理知多少》&lt;/a&gt;我把有关Http的知识总结了一下，Http是一个无状态，透明的网络协议，然而在当下大网络环境下，安全这块是很重要的，所以Http也被无情的拍着沙滩上了，当然前人栽树后人乘凉，前人打地基后人盖大楼，一切都离不开基础，本篇文章我就总结一下在Http基础上添加了安全模块的Https的相关知识点，细看必有收获。&lt;/p&gt;</summary>
    
    
    
    <category term="计算机网络" scheme="https://blog.ixin.run/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="HTTP" scheme="https://blog.ixin.run/tags/HTTP/"/>
    
    <category term="HTTPS" scheme="https://blog.ixin.run/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>Http协议原理知多少</title>
    <link href="https://blog.ixin.run/posts/1615211970/"/>
    <id>https://blog.ixin.run/posts/1615211970/</id>
    <published>2021-03-08T13:59:05.000Z</published>
    <updated>2021-03-31T16:22:55.162Z</updated>
    
    
    <summary type="html">&lt;p&gt;推荐一本书《图解HTTP》，我看了有好几遍，尤其是书中的图片很形象。无论是前端、移动端抑或是大后端都离不开Http协议，所以弄清楚Http相关知识和原理着实重要，本文就挑重点式总结一下Http知识。&lt;/p&gt;</summary>
    
    
    
    <category term="计算机网络" scheme="https://blog.ixin.run/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="HTTP" scheme="https://blog.ixin.run/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>你了解android的进程间通信吗</title>
    <link href="https://blog.ixin.run/posts/1615119064/"/>
    <id>https://blog.ixin.run/posts/1615119064/</id>
    <published>2021-03-07T12:10:40.000Z</published>
    <updated>2021-03-31T16:22:55.144Z</updated>
    
    
    <summary type="html">&lt;p&gt;你了解android的进程间通信吗？提到进程间通信，这是android开发中很重要的一环，也是面试高频知识点，本文总结一下进程间通信的几种方式，把这块知识系统起来。&lt;/p&gt;</summary>
    
    
    
    <category term="Android" scheme="https://blog.ixin.run/categories/Android/"/>
    
    
    <category term="Android" scheme="https://blog.ixin.run/tags/Android/"/>
    
    <category term="进程间通信" scheme="https://blog.ixin.run/tags/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>Android开发数据持久化有哪些形式</title>
    <link href="https://blog.ixin.run/posts/1615050026/"/>
    <id>https://blog.ixin.run/posts/1615050026/</id>
    <published>2021-03-06T17:00:12.000Z</published>
    <updated>2021-03-31T16:22:55.134Z</updated>
    
    
    <summary type="html">&lt;p&gt;Android数据持久化的形式最常用的有以下五种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用SharedPreferences存储数据&lt;/li&gt;
&lt;li&gt;文件存储数据&lt;/li&gt;
&lt;li&gt;SQLite数据库存储数据&lt;/li&gt;
&lt;li&gt;使用ContentProvider存储数据&lt;/li&gt;
&lt;li&gt;网络存储数据&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Android" scheme="https://blog.ixin.run/categories/Android/"/>
    
    
    <category term="Android" scheme="https://blog.ixin.run/tags/Android/"/>
    
    <category term="数据持久化" scheme="https://blog.ixin.run/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Android开发Style和Theme知识面总结</title>
    <link href="https://blog.ixin.run/posts/1614958762/"/>
    <id>https://blog.ixin.run/posts/1614958762/</id>
    <published>2021-03-05T15:39:22.000Z</published>
    <updated>2021-03-31T16:22:55.130Z</updated>
    
    
    <summary type="html">&lt;p&gt;这块知识大部分同学都知道，但是同样比较碎，比如说定义一个Style，到底该用于主题还是用于某个view？再比如说Style的继承应该怎么用？等等…本文我将尽可能全面的将这块知识点总结一下。&lt;/p&gt;</summary>
    
    
    
    <category term="Android" scheme="https://blog.ixin.run/categories/Android/"/>
    
    
    <category term="Android" scheme="https://blog.ixin.run/tags/Android/"/>
    
    <category term="自定义View" scheme="https://blog.ixin.run/tags/%E8%87%AA%E5%AE%9A%E4%B9%89View/"/>
    
  </entry>
  
  <entry>
    <title>Android开发之玩转Android属性动画</title>
    <link href="https://blog.ixin.run/posts/1614527870/"/>
    <id>https://blog.ixin.run/posts/1614527870/</id>
    <published>2021-02-28T15:57:29.000Z</published>
    <updated>2021-03-31T16:22:55.131Z</updated>
    
    
    <summary type="html">&lt;p&gt;前两篇重点讲述了Android开发过程中补间动画和帧动画知识点，本篇文章我们重点总结一下属性动画的使用和原理。&lt;/p&gt;</summary>
    
    
    
    <category term="Android" scheme="https://blog.ixin.run/categories/Android/"/>
    
    
    <category term="Android" scheme="https://blog.ixin.run/tags/Android/"/>
    
    <category term="动画" scheme="https://blog.ixin.run/tags/%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>Android开发之玩转Android帧动画</title>
    <link href="https://blog.ixin.run/posts/1614486338/"/>
    <id>https://blog.ixin.run/posts/1614486338/</id>
    <published>2021-02-28T04:25:24.000Z</published>
    <updated>2021-03-31T16:22:55.131Z</updated>
    
    
    <summary type="html">&lt;p&gt;帧动画有着极其广泛的应用，也非常容易理解，其实就是简单的由N张静态图片收集起来，然后我们通过控制依次显示这些图片，因为人眼&amp;quot;视觉残留&amp;quot;的原因，会让我们造成动画的&amp;quot;错觉&amp;quot;，跟放电影的原理一样！Android中展示这种形式一般有两种方式，一种用AnimationDrawable实现，另外一种直接引用GIF实现。本文就给阐述一下如何通过AnimationDrawable实现帧动画。&lt;/p&gt;</summary>
    
    
    
    <category term="Android" scheme="https://blog.ixin.run/categories/Android/"/>
    
    
    <category term="Android" scheme="https://blog.ixin.run/tags/Android/"/>
    
    <category term="动画" scheme="https://blog.ixin.run/tags/%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
</feed>
