{"per_page":10,"total":13,"current":1,"data":[{"title":"DO AS ONE WISHES","date":"2021-12-31T16:00:00.000Z","date_formatted":{"ll":"2022年1月1日","L":"2022/01/01","MM-DD":"01-01"},"thumbnail":"https://api.kdcc.cn/img/","excerpt":"","link":"posts/0"},{"title":"浅谈Android和Flutter暗黑模式","date":"2022-02-16T04:33:10.000Z","date_formatted":{"ll":"2022年2月16日","L":"2022/02/16","MM-DD":"02-16"},"excerpt":"<p>暗黑模式是Android Q推出来的，也是一个主题切换思想，黑暗模式不仅可能减少耗电量，在光线暗的环境中对眼睛也有保护的作用。暗黑模式适配一般是围绕着三个方面来进行适配：</p>\n<ol>\n<li>文字颜色的适配</li>\n<li>图片资源的适配</li>\n<li>背景颜色的适配</li>\n</ol>\n<p>以下就简单说一下Android和Flutter配置暗黑模式的形式。</p>","link":"posts/1644985990","categories":["Android"]},{"title":"Flutter渲染机制","date":"2022-01-24T13:02:11.000Z","date_formatted":{"ll":"2022年1月24日","L":"2022/01/24","MM-DD":"01-24"},"excerpt":"<p>渲染机制似乎是所有前端框架开发者都要深入了解的知识。</p>","link":"posts/1643029348","categories":["Flutter"]},{"title":"Flutter状态管理器","date":"2022-01-21T01:17:46.000Z","date_formatted":{"ll":"2022年1月21日","L":"2022/01/21","MM-DD":"01-21"},"thumbnail":"https://note.youdao.com/yws/api/personal/file/5EBBDFA25D9E4369ABE378F57C04CCBD?method=download&shareKey=29ed5dd55acdd67717a075723eba7a2e","excerpt":"<p>Flutter是声明式编程模式，开发者就像堆积木一样来堆模型，只用关心每块积木展示的条件，不需要关心积木内部的功能实现细节。因此每一块积木都是一种状态，慢慢随着积木越来越多开发者必须要把这些状态（形态、关系）管理好，否则就会是一团麻了。</p>","link":"posts/1642727866","categories":["Flutter"]},{"title":"Flutter开发语言Dart学习","date":"2022-01-20T14:08:40.000Z","date_formatted":{"ll":"2022年1月20日","L":"2022/01/20","MM-DD":"01-20"},"excerpt":"<p>语言都是相通的。</p>","link":"posts/1642687720","tags":["高级语言"],"categories":["Flutter"]},{"title":"Flutter生命周期","date":"2022-01-20T14:07:51.000Z","date_formatted":{"ll":"2022年1月20日","L":"2022/01/20","MM-DD":"01-20"},"excerpt":"<p>提到生命周期太过熟悉，无论android、iOS还是flutter开发，都离不开围绕着生命周期转。生命周期顾名思义就是一个活动从开始创建到结束所经历的这个过程。</p>","link":"posts/1642687671","categories":["Flutter"]},{"title":"Flutter开发必知必会","date":"2022-01-19T15:45:26.000Z","date_formatted":{"ll":"2022年1月19日","L":"2022/01/19","MM-DD":"01-19"},"excerpt":"<p>如果说Java是面向对象，那么Flutter就是面向组件，一切皆组件，那么多组件怎么学习呢，这里我就把高频使用的组件、方法、以及pub包整理一下，主要是能够快速上手和入门。</p>","link":"posts/1642607126","categories":["Flutter"]},{"title":"Flutter环境搭建","date":"2022-01-18T14:12:00.000Z","date_formatted":{"ll":"2022年1月18日","L":"2022/01/18","MM-DD":"01-18"},"excerpt":"<p>Flutter开发也有一段时间了，一直也没有总结，今天发现最初的环境搭建还要各种搜，是时候来上一篇了，以下是在AndroidStudio中进行Flutter环境搭建过程。</p>","link":"posts/1642515162","categories":["Flutter"]},{"title":"轻松玩转Flutter混合开发","date":"2021-09-09T08:20:27.000Z","date_formatted":{"ll":"2021年9月9日","L":"2021/09/09","MM-DD":"09-09"},"excerpt":"<p>Flutter自推出以来备受欢迎，国内最先引入使用的是闲鱼团队的闲鱼App。好多同学都知道Flutter是一套跨平台UI框架，最常见的运用则是一套代码同时可以编译出Android、iOS、H5等多种形式，但是实际开发中一般只有新项目我们才会用flutter进行直接编译打包，针对老项目谁都也不愿意完全推翻再用flutter重新写一遍，更多的是采用混合开发模式，即将flutter的产物嵌入到Android或者iOS项目中一同编译。本文我就总结一下Flutter混合开发的那些事。</p>","link":"posts/1631175663","categories":["Flutter"]},{"title":"网络三件套（一）为什么用OkHttp","date":"2021-08-26T08:44:38.000Z","date_formatted":{"ll":"2021年8月26日","L":"2021/08/26","MM-DD":"08-26"},"excerpt":"<p>提起Android上常用的网络框架，太多太多，从早前的HttpClient，到被Google认定的HttpUrlConnection，还有万剑齐发的Volley，但是伴隨后来的大Boss——OkHttp的出现，似乎前边的曾经不可一世的网络框架都沉寂了，为什么OkHttp这么牛，牛在哪里呢，本文就着重说一下。</p>","link":"posts/1629967595","tags":["网络三件套"],"categories":["Android"]}]}