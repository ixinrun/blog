{"title":"Android性能优化","date":"2021-02-06T11:12:00.000Z","date_formatted":{"ll":"2021年2月6日","L":"2021/02/06","MM-DD":"02-06"},"link":"posts/1644145982","comments":true,"categories":["Android"],"updated":"2022-08-25T14:14:20.387Z","content":"<h2 id=\"启动优化\">启动优化<a title=\"#启动优化\" href=\"#启动优化\"></a></h2>\n<ul>\n<li>视觉优化</li>\n<li>启动主题优化</li>\n<li>代码优化\n<ul>\n<li>第三方库懒加载</li>\n<li>Application 异步加载</li>\n<li>闪屏延迟初始</li>\n<li>页面数据预加载</li>\n<li>启动过程不建议出现网络IO</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"ui渲染优化\">UI渲染优化<a title=\"#ui渲染优化\" href=\"#ui渲染优化\"></a></h2>\n<ul>\n<li>XML减少嵌套</li>\n<li>自定义View固定绘制区域</li>\n<li>利用Hierarchy Viewer工具查看层级嵌套</li>\n</ul>\n<h2 id=\"内存优化\">内存优化<a title=\"#内存优化\" href=\"#内存优化\"></a></h2>\n<ul>\n<li>使用Memory Profiler查看内存占用曲线</li>\n<li>使用MAT工具生成hprof文件锁定内存泄漏点</li>\n<li>使用LeakCannary检查内存泄漏点</li>\n<li>静态变量不要滥用，尤其是Context、Activity等</li>\n<li>WebView及时回收</li>\n<li>流时操作及时关闭</li>\n<li>BitMap及时回收</li>\n<li>图片压缩</li>\n<li>ARGB_8888和ARGB_4444选择</li>\n</ul>\n<h2 id=\"网络优化\">网络优化<a title=\"#网络优化\" href=\"#网络优化\"></a></h2>\n<ul>\n<li>接口优化（速度快）</li>\n<li>减少请求次数</li>\n<li>数据包压缩</li>\n<li>合理使用缓存</li>\n<li>DNS解析和HTTPS安全传输</li>\n<li>弱网调优（Android模拟器可以设置网络速度和延迟）</li>\n</ul>\n<h2 id=\"耗电优化\">耗电优化<a title=\"#耗电优化\" href=\"#耗电优化\"></a></h2>\n<ul>\n<li>减少前后台任务挂载</li>\n<li>减少硬件频繁操作（Sensor、Bluetooth、GPS、Camera、CPU）</li>\n<li>减少网络频繁请求</li>\n</ul>\n<h2 id=\"安装包优化\">安装包优化<a title=\"#安装包优化\" href=\"#安装包优化\"></a></h2>\n<ul>\n<li>手动清理无用资源</li>\n<li>使用Lint工具检查无用资源引用</li>\n<li>代码混淆、资源压缩</li>\n<li>图片手动压缩引用，png、webp</li>\n<li>资源动态加载</li>\n</ul>\n<h2 id=\"几个问题\">几个问题<a title=\"#几个问题\" href=\"#几个问题\"></a></h2>\n<ol>\n<li>在之前的项目中做过哪些性能优化，取得过哪些收益？ <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">以上优化方面说说</span><br></pre></td></tr></table></figure>\n</li>\n<li>对于App启动时间这块，有什么心得？如何从线程、系统层面出发优化启动速度？<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、在Application的构造器方法、attachBaseContext()、onCreate()方法中不要进行耗时操作的初始化，一些数据预取放在异步线程中，可以采取Callable实现。</span><br><span class=\"line\">2、对于sp的初始化，因为sp的特性在初始化时候会对数据全部读出来存在内存中，所以这个初始化放在主线程中不合适，反而会延迟应用的启动速度，对于这个还是需要放在异步线程中处理。</span><br><span class=\"line\">3、对于MainActivity，由于在获取到第一帧前，需要对contentView进行测量布局绘制操作，尽量减少布局的层次，考虑StubView的延迟加载策略，当然在onCreate、onStart、onResume方法中避免做耗时操作。</span><br></pre></td></tr></table></figure>\n</li>\n<li>对于内存优化，你觉得需要做哪些事情？Java/Native 内存泄漏如何检测与处理？</li>\n<li>流畅性这块，你们 App 的关注的指标是？这块有什么经验？你觉得造成页面卡顿最主要的原因是？有什么通用性的优化方案？ <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 启动时长</span><br><span class=\"line\">2. 内存占用</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<ul>\n<li><a href=\"https://jsonchao.github.io/2019/11/10/%E6%B7%B1%E5%85%A5%E6%8E%A2%E7%B4%A2Android%E5%90%AF%E5%8A%A8%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96/\">https://jsonchao.github.io/2019/11/10/深入探索Android启动速度优化/</a></li>\n</ul>\n","prev":{"title":"Java多态小记","link":"posts/1612714489"},"next":{"title":"Jenkins自动化构建（一）玩转Android项目自动化打包","link":"posts/1612097829"},"plink":"https://blog.ixin.run/posts/1644145982/","toc":[{"id":"启动优化","title":"启动优化","index":"1"},{"id":"ui渲染优化","title":"UI渲染优化","index":"2"},{"id":"内存优化","title":"内存优化","index":"3"},{"id":"网络优化","title":"网络优化","index":"4"},{"id":"耗电优化","title":"耗电优化","index":"5"},{"id":"安装包优化","title":"安装包优化","index":"6"},{"id":"几个问题","title":"几个问题","index":"7"},{"id":"参考","title":"参考","index":"8"}],"reward":true,"copyright":{"author":"乂星人","link":"<a href=\"https://blog.ixin.run/posts/1644145982/\" title=\"Android性能优化\">https://blog.ixin.run/posts/1644145982/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}