{"title":"浅谈Android和Flutter暗黑模式","date":"2022-02-16T04:33:10.000Z","date_formatted":{"ll":"2022年2月16日","L":"2022/02/16","MM-DD":"02-16"},"link":"posts/1644985990","comments":true,"categories":["Android"],"updated":"2022-08-25T14:14:20.387Z","content":"<p>暗黑模式是Android Q推出来的，也是一个主题切换思想，黑暗模式不仅可能减少耗电量，在光线暗的环境中对眼睛也有保护的作用。暗黑模式适配一般是围绕着三个方面来进行适配：</p>\n<ol>\n<li>文字颜色的适配</li>\n<li>图片资源的适配</li>\n<li>背景颜色的适配</li>\n</ol>\n<p>以下就简单说一下Android和Flutter配置暗黑模式的形式。</p>\n<a id=\"more\"></a>\n<h2 id=\"android暗黑模式\">Android暗黑模式<a title=\"#android暗黑模式\" href=\"#android暗黑模式\"></a></h2>\n<p>两种方式：</p>\n<ol>\n<li>快速适配</li>\n<li>精细化适配</li>\n</ol>\n<h3 id=\"快速适配\">快速适配<a title=\"#快速适配\" href=\"#快速适配\"></a></h3>\n<p>Android Q 提供了 Force Dark 功能，在浅色主题 (例如:Theme.Material.Light) 上面设置 <code>android:forceDarkAllowed=&quot;true&quot;</code>，就可以快速的实现黑色主题背景，而不需要为黑色主题背景提供单独的主题资源。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;AppTheme&quot;</span> <span class=\"attr\">parent</span>=<span class=\"string\">&quot;Theme.AppCompat.Light.NoActionBar&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;colorPrimary&quot;</span>&gt;</span>@color/purple_500<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;colorPrimaryVariant&quot;</span>&gt;</span>@color/purple_700<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;colorOnPrimary&quot;</span>&gt;</span>@color/white<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--强制实现暗黑模式--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;android:forceDarkAllowed&quot;</span> <span class=\"attr\">tools:targetApi</span>=<span class=\"string\">&quot;q&quot;</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>但是这种有个弊端：</p>\n<ol>\n<li>theme主题不能继承Dark Theme和DayNight主题，只能继承除此以外的其他主题，换句话说仅支持非夜间模式或者非夜间主题的主题。</li>\n<li>由于所有的地方都是系统自己更改设置的，所以需要在每个界面都仔细测试，看最终呈现出来的暗黑效果是不是自己想要的。</li>\n</ol>\n<h3 id=\"精细化适配\">精细化适配<a title=\"#精细化适配\" href=\"#精细化适配\"></a></h3>\n<p>暗黑模式下的资源都是自己添加的，围绕着开篇说的三点来适配。</p>\n<h4 id=\"资源配置\">资源配置<a title=\"#资源配置\" href=\"#资源配置\"></a></h4>\n<ol>\n<li>颜色资源<br>\nvalues-night文件夹下新建<code>colors.xml</code>将页面中使用的色值都替换成暗黑模式下的色值。</li>\n<li>图片资源<br>\n新建mipmap-night/drawable-night文件夹，将页面中使用的图片和样式资源都替换成暗黑模式下的对应资源。</li>\n<li>背景资源<br>\nvalues-night和values文件夹的AppTheme继承自<code>Theme.MaterialComponents.DayNight.DarkActionBar</code>，并设置不同的<code>android:windowBackground</code>的值。</li>\n</ol>\n<p><img src=\"\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<h4 id=\"代码生效\">代码生效<a title=\"#代码生效\" href=\"#代码生效\"></a></h4>\n<p>只需要在app初次加载或者手动切换时设定暗黑模式即可：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES);</span><br></pre></td></tr></table></figure>\n<p>AppCompatDelegate开发中最常用有四种模式：</p>\n<ol>\n<li>MODE_NIGHT_NO  白天</li>\n<li>MODE_NIGHT_YES  夜间</li>\n<li>MODE_NIGHT_FOLLOW_SYSTEM  跟随系统</li>\n<li>MODE_NIGHT_AUTO_BATTERY  省电模式</li>\n</ol>\n<p>根据这三种模式我们可以用一个工具类日夜切换进行快速设定：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DarkModeUtils</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String KEY_CURRENT_MODEL = <span class=\"string\">&quot;night_mode_state_sp&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">getNightModel</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        SharedPreferences sp = context.getSharedPreferences(KEY_CURRENT_MODEL, Context.MODE_PRIVATE);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sp.getInt(KEY_CURRENT_MODEL, AppCompatDelegate.MODE_NIGHT_FOLLOW_SYSTEM);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setNightModel</span><span class=\"params\">(Context context, <span class=\"keyword\">int</span> nightMode)</span> </span>&#123;</span><br><span class=\"line\">        SharedPreferences sp = context.getSharedPreferences(KEY_CURRENT_MODEL, Context.MODE_PRIVATE);</span><br><span class=\"line\">        sp.edit().putInt(KEY_CURRENT_MODEL, nightMode).apply();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * ths method should be called in Application onCreate method</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> application application</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(Application application)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> nightMode = getNightModel(application);</span><br><span class=\"line\">        AppCompatDelegate.setDefaultNightMode(nightMode);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 应用夜间模式</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">applyNightMode</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES);</span><br><span class=\"line\">        setNightModel(context, AppCompatDelegate.MODE_NIGHT_YES);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 应用日间模式</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">applyDayMode</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO);</span><br><span class=\"line\">        setNightModel(context, AppCompatDelegate.MODE_NIGHT_NO);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 跟随系统主题时需要动态切换</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">applySystemMode</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_FOLLOW_SYSTEM);</span><br><span class=\"line\">        setNightModel(context, AppCompatDelegate.MODE_NIGHT_FOLLOW_SYSTEM);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 判断App当前是否处于暗黑模式状态</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> context 上下文</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 返回</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isDarkMode</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> nightMode = getNightModel(context);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nightMode == AppCompatDelegate.MODE_NIGHT_FOLLOW_SYSTEM) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> applicationUiMode = context.getResources().getConfiguration().uiMode;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> systemMode = applicationUiMode &amp; Configuration.UI_MODE_NIGHT_MASK;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> systemMode == Configuration.UI_MODE_NIGHT_YES;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> nightMode == AppCompatDelegate.MODE_NIGHT_YES;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"android暗黑模式原理\">android暗黑模式原理<a title=\"#android暗黑模式原理\" href=\"#android暗黑模式原理\"></a></h3>\n<p><a href=\"https://blog.csdn.net/plokmju88/article/details/119881069\">https://blog.csdn.net/plokmju88/article/details/119881069</a></p>\n<h2 id=\"flutter暗黑模式\">Flutter暗黑模式<a title=\"#flutter暗黑模式\" href=\"#flutter暗黑模式\"></a></h2>\n<p>flutter暗黑模式主要是通过主题选取设定的，Flutter主题有两个地方:</p>\n<ol>\n<li>flutter应用入口，即MaterialApp</li>\n<li>部分Widget可以设置主题</li>\n</ol>\n<p>正常情况下Flutter暗黑模式的主题设定只需要在入口处预定好即可</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MaterialApp(</span><br><span class=\"line\">      title: <span class=\"string\">&#x27;Flutter Demo&#x27;</span>,</span><br><span class=\"line\">      themeMode: ThemeMode.system,</span><br><span class=\"line\">      darkTheme: ThemeData(</span><br><span class=\"line\">        primarySwatch: Colors.red,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      theme: ThemeData(</span><br><span class=\"line\">        primarySwatch: Colors.blue,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      home: MyHomePage(title: <span class=\"string\">&#x27;Flutter Demo Home Page&#x27;</span>),</span><br><span class=\"line\">    )</span><br></pre></td></tr></table></figure>\n<p>通过设置不同ThemeModel系统会选择相应的ThemeData来准备相应的主题数据，而在开发过程中可以通过<code>Theme.of(context)</code>函数来使用ThemeData中预定的主题资源数据：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ThemeTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Scaffold(</span><br><span class=\"line\">      appBar: AppBar(</span><br><span class=\"line\">        title: Text(<span class=\"string\">&quot;ThemeTest&quot;</span>), <span class=\"comment\">//页面标题</span></span><br><span class=\"line\">      ),</span><br><span class=\"line\">      body: Container(</span><br><span class=\"line\">        color: Theme.of(context).primaryColor, <span class=\"comment\">//内容背景颜色</span></span><br><span class=\"line\">        margin: EdgeInsets.all(<span class=\"number\">100.0</span>),</span><br><span class=\"line\">        padding: EdgeInsets.all(<span class=\"number\">10.0</span>),</span><br><span class=\"line\">        child: Text(</span><br><span class=\"line\">          <span class=\"string\">&quot;MaterialApp Theme Color&quot;</span>, <span class=\"comment\">//内容文本</span></span><br><span class=\"line\">          style: TextStyle(</span><br><span class=\"line\">              fontSize: <span class=\"number\">20</span>, color: Theme.of(context).accentColor), <span class=\"comment\">//内容文本颜色，引用的是accentColor。</span></span><br><span class=\"line\">          textAlign: TextAlign.center,</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"thememode\">ThemeMode<a title=\"#thememode\" href=\"#thememode\"></a></h3>\n<p>ThemeMode的设置模式有三种：</p>\n<ol>\n<li>浅色模式</li>\n<li>深色模式</li>\n<li>跟随系统</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">enum</span> ThemeMode &#123;</span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">Use either the light or dark theme based on what the user has selected in</span></span></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">the system settings.</span></span></span><br><span class=\"line\">  system,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">Always use the light mode regardless of system preference.</span></span></span><br><span class=\"line\">  light,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">Always use the dark mode (if available) regardless of system preference.</span></span></span><br><span class=\"line\">  dark,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"themedata\">ThemeData<a title=\"#themedata\" href=\"#themedata\"></a></h3>\n<p>ThemeData给我们预定了很多app的场景元素，因此我们可以设定日夜模式下不同的ThemeData相关色值和资源：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">factory</span> ThemeData(&#123;</span><br><span class=\"line\">  Brightness brightness, <span class=\"comment\">// 应用整体主题的亮度。用于按钮之类的小部件，以确定在不使用主色或强调色时选择什么颜色。</span></span><br><span class=\"line\">  MaterialColor primarySwatch,<span class=\"comment\">// 定义一个单一的颜色以及十个色度的色块。</span></span><br><span class=\"line\">  Color primaryColor, <span class=\"comment\">// 应用程序主要部分的背景颜色(toolbars、tab bars 等)</span></span><br><span class=\"line\">  Brightness primaryColorBrightness, <span class=\"comment\">// primaryColor的亮度。用于确定文本的颜色和放置在主颜色之上的图标(例如工具栏文本)。</span></span><br><span class=\"line\">  Color primaryColorLight, <span class=\"comment\">// primaryColor的浅色版</span></span><br><span class=\"line\">  Color primaryColorDark, <span class=\"comment\">// primaryColor的深色版</span></span><br><span class=\"line\">  Color accentColor, <span class=\"comment\">// 小部件的前景色(旋钮、文本、覆盖边缘效果等)。</span></span><br><span class=\"line\">  Brightness accentColorBrightness, <span class=\"comment\">// accentColor的亮度。</span></span><br><span class=\"line\">  Color canvasColor, <span class=\"comment\">//  MaterialType.canvas 的默认颜色</span></span><br><span class=\"line\">  Color scaffoldBackgroundColor, <span class=\"comment\">// Scaffold的默认颜色。典型Material应用程序或应用程序内页面的背景颜色。</span></span><br><span class=\"line\">  Color bottomAppBarColor, <span class=\"comment\">// BottomAppBar的默认颜色</span></span><br><span class=\"line\">  Color cardColor, <span class=\"comment\">// Card的颜色</span></span><br><span class=\"line\">  Color dividerColor, <span class=\"comment\">// Divider和PopupMenuDivider的颜色，也用于ListTile之间、DataTable的行之间等。</span></span><br><span class=\"line\">  Color highlightColor, <span class=\"comment\">// 选中在泼墨动画期间使用的突出显示颜色，或用于指示菜单中的项。</span></span><br><span class=\"line\">  Color splashColor,  <span class=\"comment\">// 墨水飞溅的颜色。InkWell</span></span><br><span class=\"line\">  InteractiveInkFeatureFactory splashFactory, <span class=\"comment\">// 定义由InkWell和InkResponse反应产生的墨溅的外观。</span></span><br><span class=\"line\">  Color selectedRowColor, <span class=\"comment\">// 用于突出显示选定行的颜色。</span></span><br><span class=\"line\">  Color unselectedWidgetColor, <span class=\"comment\">// 用于处于非活动(但已启用)状态的小部件的颜色。例如，未选中的复选框。通常与accentColor形成对比。也看到disabledColor。</span></span><br><span class=\"line\">  Color disabledColor, <span class=\"comment\">// 禁用状态下部件的颜色，无论其当前状态如何。例如，一个禁用的复选框(可以选中或未选中)。</span></span><br><span class=\"line\">  Color buttonColor, <span class=\"comment\">// RaisedButton按钮中使用的Material 的默认填充颜色。</span></span><br><span class=\"line\">  ButtonThemeData buttonTheme, <span class=\"comment\">// 定义按钮部件的默认配置，如RaisedButton和FlatButton。</span></span><br><span class=\"line\">  Color secondaryHeaderColor, <span class=\"comment\">// 选定行时PaginatedDataTable标题的颜色。</span></span><br><span class=\"line\">  Color textSelectionColor, <span class=\"comment\">// 文本框中文本选择的颜色，如TextField</span></span><br><span class=\"line\">  Color cursorColor, <span class=\"comment\">// 文本框中光标的颜色，如TextField</span></span><br><span class=\"line\">  Color textSelectionHandleColor,  <span class=\"comment\">// 用于调整当前选定的文本部分的句柄的颜色。</span></span><br><span class=\"line\">  Color backgroundColor, <span class=\"comment\">// 与主色形成对比的颜色，例如用作进度条的剩余部分。</span></span><br><span class=\"line\">  Color dialogBackgroundColor, <span class=\"comment\">// Dialog 元素的背景颜色</span></span><br><span class=\"line\">  Color indicatorColor, <span class=\"comment\">// 选项卡中选定的选项卡指示器的颜色。</span></span><br><span class=\"line\">  Color hintColor, <span class=\"comment\">// 用于提示文本或占位符文本的颜色，例如在TextField中。</span></span><br><span class=\"line\">  Color errorColor, <span class=\"comment\">// 用于输入验证错误的颜色，例如在TextField中</span></span><br><span class=\"line\">  Color toggleableActiveColor, <span class=\"comment\">// 用于突出显示Switch、Radio和Checkbox等可切换小部件的活动状态的颜色。</span></span><br><span class=\"line\">  <span class=\"built_in\">String</span> fontFamily, <span class=\"comment\">// 文本字体</span></span><br><span class=\"line\">  TextTheme textTheme, <span class=\"comment\">// 文本的颜色与卡片和画布的颜色形成对比。</span></span><br><span class=\"line\">  TextTheme primaryTextTheme, <span class=\"comment\">// 与primaryColor形成对比的文本主题</span></span><br><span class=\"line\">  TextTheme accentTextTheme, <span class=\"comment\">// 与accentColor形成对比的文本主题。</span></span><br><span class=\"line\">  InputDecorationTheme inputDecorationTheme, <span class=\"comment\">// 基于这个主题的 InputDecorator、TextField和TextFormField的默认InputDecoration值。</span></span><br><span class=\"line\">  IconThemeData iconTheme, <span class=\"comment\">// 与卡片和画布颜色形成对比的图标主题</span></span><br><span class=\"line\">  IconThemeData primaryIconTheme, <span class=\"comment\">// 与primaryColor形成对比的图标主题</span></span><br><span class=\"line\">  IconThemeData accentIconTheme, <span class=\"comment\">// 与accentColor形成对比的图标主题。</span></span><br><span class=\"line\">  SliderThemeData sliderTheme,  <span class=\"comment\">// 用于呈现Slider的颜色和形状</span></span><br><span class=\"line\">  TabBarTheme tabBarTheme, <span class=\"comment\">// 用于自定义选项卡栏指示器的大小、形状和颜色的主题。</span></span><br><span class=\"line\">  CardTheme cardTheme, <span class=\"comment\">// Card的颜色和样式</span></span><br><span class=\"line\">  ChipThemeData chipTheme, <span class=\"comment\">// Chip的颜色和样式</span></span><br><span class=\"line\">  TargetPlatform platform, </span><br><span class=\"line\">  MaterialTapTargetSize materialTapTargetSize, <span class=\"comment\">// 配置某些Material部件的命中测试大小</span></span><br><span class=\"line\">  PageTransitionsTheme pageTransitionsTheme, </span><br><span class=\"line\">  AppBarTheme appBarTheme, <span class=\"comment\">// 用于自定义Appbar的颜色、高度、亮度、iconTheme和textTheme的主题。</span></span><br><span class=\"line\">  BottomAppBarTheme bottomAppBarTheme, <span class=\"comment\">// 自定义BottomAppBar的形状、高度和颜色的主题。</span></span><br><span class=\"line\">  ColorScheme colorScheme, <span class=\"comment\">// 拥有13种颜色，可用于配置大多数组件的颜色。</span></span><br><span class=\"line\">  DialogTheme dialogTheme, <span class=\"comment\">// 自定义Dialog的主题形状</span></span><br><span class=\"line\">  Typography typography, <span class=\"comment\">// 用于配置TextTheme、primaryTextTheme和accentTextTheme的颜色和几何TextTheme值。</span></span><br><span class=\"line\">  CupertinoThemeData cupertinoOverrideTheme </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>有同学说这些资源仍然不够怎么办？那是不是可以自定义一个颜色切换类，通过判断当前主题属于哪种模式来获取相应的资源颜色呢。</p>\n<h3 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h3>\n<p>无论是Android还是Flutter的主题切换，更多的是资源文件内容的替换，所以在面向资源整理的时候例如颜色值，我们可以根据场景来预定，这点Flutter做的挺好，android也可以进行参考。</p>\n<p>另外一点，本篇所讲的暗黑模式切换，其实就是静态换肤，也不是所有的资源都要进行替换，而是只需要设定一个特定主题框架例如：标题栏、背景、字体、导航栏进行处理，这也是换肤的常用场景。</p>\n<p>有兴趣的同学可以进一步研究一下动态换肤是怎么玩的。</p>\n","prev":{"title":"快速走进鸿蒙","link":"posts/1661694534"},"next":{"title":"Flutter渲染机制","link":"posts/1643029348"},"plink":"https://blog.ixin.run/posts/1644985990/","toc":[{"id":"android暗黑模式","title":"Android暗黑模式","index":"1","children":[{"id":"快速适配","title":"快速适配","index":"1.1"},{"id":"精细化适配","title":"精细化适配","index":"1.2"},{"id":"android暗黑模式原理","title":"android暗黑模式原理","index":"1.3"}]},{"id":"flutter暗黑模式","title":"Flutter暗黑模式","index":"2","children":[{"id":"thememode","title":"ThemeMode","index":"2.1"},{"id":"themedata","title":"ThemeData","index":"2.2"},{"id":"总结","title":"总结","index":"2.3"}]}],"reward":true,"copyright":{"author":"乂星人","link":"<a href=\"https://blog.ixin.run/posts/1644985990/\" title=\"浅谈Android和Flutter暗黑模式\">https://blog.ixin.run/posts/1644985990/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}