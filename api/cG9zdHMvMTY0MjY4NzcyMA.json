{"title":"Flutter开发语言Dart学习","date":"2022-01-20T14:08:40.000Z","date_formatted":{"ll":"2022年1月20日","L":"2022/01/20","MM-DD":"01-20"},"link":"posts/1642687720","comments":true,"tags":["高级语言"],"categories":["Flutter"],"updated":"2022-02-05T09:14:01.710Z","content":"<p>语言都是相通的。</p>\n<a id=\"more\"></a>\n<h2 id=\"注释\">注释<a title=\"#注释\" href=\"#注释\"></a></h2>\n<p>单行注释：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// todo 一般针对某一语句进行注释。</span></span><br></pre></td></tr></table></figure>\n<p>多行注释：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* 针对一段逻辑可以多行解释，但是这种用的不多，</span></span><br><span class=\"line\"><span class=\"comment\">* 大部分都是采用文档注释的方式进行多行注释。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<p>文档注释：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">主要针对类、全局变量和方法上进行注释。</span></span></span><br><span class=\"line\"><span class=\"comment\">///</span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">在第一句之后添加一个空行，将其拆分为自己的段落，这有助于您编写一个简短的第一句话来总结文档。</span></span></span><br><span class=\"line\"><span class=\"comment\">///</span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">尽量在文档注释中使用方括号来引用范围内标识符，例如[Flag]、[addFlag]、[name]甚或是其他类成员[LoginPage.userName]都行。</span></span></span><br><span class=\"line\"><span class=\"comment\">///</span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">可以在注释中引用代码，例如：</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\"><span class=\"code\">```dart</span></span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">Flag addFlag(String name, String abbr) =&gt; ...</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\"><span class=\"code\">```</span></span></span></span><br><span class=\"line\">Flag addFlag(<span class=\"built_in\">String</span> name, <span class=\"built_in\">String</span> abbr) =&gt; ...</span><br></pre></td></tr></table></figure>\n<h2 id=\"变量与常量\">变量与常量<a title=\"#变量与常量\" href=\"#变量与常量\"></a></h2>\n<h3 id=\"变量\">变量<a title=\"#变量\" href=\"#变量\"></a></h3>\n<h4 id=\"1.通用类型var\">1.通用类型var<a title=\"#1.通用类型var\" href=\"#1.通用类型var\"></a></h4>\n<p>var可以自动推断出变量类型，常用于定义对象。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;123&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> userInfo = LoginInfo.fromJson(xxx);</span><br></pre></td></tr></table></figure>\n<h4 id=\"2.字符串\">2.字符串<a title=\"#2.字符串\" href=\"#2.字符串\"></a></h4>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">单一赋值</span></span></span><br><span class=\"line\"><span class=\"built_in\">String</span> str = <span class=\"string\">&#x27;123&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">多行赋值</span></span></span><br><span class=\"line\"><span class=\"built_in\">String</span> str1=<span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">  hello word,</span></span><br><span class=\"line\"><span class=\"string\">  hello dart!</span></span><br><span class=\"line\"><span class=\"string\">  &#x27;&#x27;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">字符串拼接</span></span></span><br><span class=\"line\"><span class=\"built_in\">String</span> s = <span class=\"string\">&#x27;456&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">String</span> str = <span class=\"string\">&#x27;123<span class=\"subst\">$s789</span>&#x27;</span>; </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;<span class=\"subst\">$str0</span>&#x27;</span>); <span class=\"comment\">//1234567890</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3.数字类型\">3.数字类型<a title=\"#3.数字类型\" href=\"#3.数字类型\"></a></h4>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">数值型使用关键字[num]表示,它包含整型[int]和浮点型[double]两种。</span></span></span><br><span class=\"line\"><span class=\"built_in\">num</span> i = <span class=\"number\">123.45</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">整形</span></span></span><br><span class=\"line\"><span class=\"built_in\">int</span> i1 = <span class=\"number\">123</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">浮点型</span></span></span><br><span class=\"line\"><span class=\"built_in\">double</span> i2 = <span class=\"number\">123.45</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4.布尔类型bool\">4.布尔类型bool<a title=\"#4.布尔类型bool\" href=\"#4.布尔类型bool\"></a></h4>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">bool</span> flag = <span class=\"keyword\">true</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5.list\">5.List<a title=\"#5.list\" href=\"#5.list\"></a></h4>\n<p>List既可以表示集合也可以表示数组。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">list定义</span></span></span><br><span class=\"line\"><span class=\"keyword\">var</span> l = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> l0 = &lt;<span class=\"built_in\">int</span>&gt;[]; </span><br><span class=\"line\"><span class=\"built_in\">List</span> l1 = <span class=\"built_in\">List</span>(); </span><br><span class=\"line\"><span class=\"built_in\">List</span> l2 = <span class=\"built_in\">List</span>&lt;<span class=\"built_in\">int</span>&gt;(); <span class=\"comment\">// 指定存放类型</span></span><br><span class=\"line\"><span class=\"built_in\">List</span> l3 = <span class=\"built_in\">List</span>.filled(<span class=\"number\">2</span>, <span class=\"string\">&quot;&quot;</span>);  <span class=\"comment\">// 生成一个固定长度的集合</span></span><br><span class=\"line\"><span class=\"built_in\">List</span> l4 = <span class=\"built_in\">List</span>&lt;<span class=\"built_in\">String</span>&gt;.filled(<span class=\"number\">2</span>, <span class=\"string\">&quot;&quot;</span>); <span class=\"comment\">// 生成一个固定数据类型固定长度的集合</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">取值</span></span></span><br><span class=\"line\"><span class=\"built_in\">int</span> a = l2[<span class=\"number\">0</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">list去重，先定义一个set，再把list塞到set里。</span></span></span><br><span class=\"line\"><span class=\"keyword\">var</span> repeat = [<span class=\"string\">&#x27;aa&#x27;</span>, <span class=\"string\">&#x27;bb&#x27;</span>, <span class=\"string\">&#x27;cc&#x27;</span>, <span class=\"string\">&#x27;aa&#x27;</span>, <span class=\"string\">&#x27;bb&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> dedu = <span class=\"built_in\">Set</span>();</span><br><span class=\"line\"><span class=\"built_in\">List</span> list = dedu.addAll(repeat).toList();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">list foreach</span></span></span><br><span class=\"line\">list.forEach((value)&#123;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;<span class=\"subst\">$value</span>&#x27;</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">list重组两种方式</span></span></span><br><span class=\"line\"><span class=\"keyword\">var</span> list = list.map（（value）&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> value*<span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;）</span><br><span class=\"line\"><span class=\"keyword\">var</span> list = list.where((value)&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> value&gt;<span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">list包含判断</span></span></span><br><span class=\"line\"><span class=\"comment\">// 只要有一个满足条件的返回true</span></span><br><span class=\"line\"><span class=\"built_in\">bool</span> f = list.any((value)&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> value &gt;<span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 每一个都满足返回true</span></span><br><span class=\"line\"><span class=\"built_in\">bool</span> f = list.every((value)&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> value&gt;<span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"6.map\">6.Map<a title=\"#6.map\" href=\"#6.map\"></a></h4>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">map定义</span></span></span><br><span class=\"line\"><span class=\"keyword\">var</span> map = &#123;&#125;;</span><br><span class=\"line\"><span class=\"built_in\">Map</span> map1 = <span class=\"built_in\">Map</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> person=&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;name&#x27;</span>:<span class=\"string\">&#x27;张三&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;age&#x27;</span>:<span class=\"number\">20</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">map取值</span></span></span><br><span class=\"line\"><span class=\"built_in\">String</span> name = person[<span class=\"string\">&#x27;name&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">map赋值</span></span></span><br><span class=\"line\">person[<span class=\"string\">&#x27;age&#x27;</span>] = <span class=\"number\">21</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">获取所有key</span></span></span><br><span class=\"line\"><span class=\"built_in\">List</span> keys = person.keys.toList();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">获取所有value</span></span></span><br><span class=\"line\"><span class=\"built_in\">List</span> values = person.values.toList();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">map添加数据</span></span></span><br><span class=\"line\">person.addAll(&#123;</span><br><span class=\"line\"><span class=\"string\">&#x27;sex&#x27;</span>:<span class=\"string\">&#x27;男&#x27;</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">是否包含某个值</span></span></span><br><span class=\"line\">person.containsValue(<span class=\"string\">&#x27;张三&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">map foreach</span></span></span><br><span class=\"line\">map.forEach((key, value)&#123;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;<span class=\"subst\">$key</span>---<span class=\"subst\">$value</span>&quot;</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"其他\">其他<a title=\"#其他\" href=\"#其他\"></a></h4>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// late修饰，表示a一定会初始化，只不过稍后处理。</span></span><br><span class=\"line\"><span class=\"keyword\">late</span> <span class=\"built_in\">int</span> a; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// dynamic表示任意类型，类似java中的Object</span></span><br><span class=\"line\"><span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">dynamic</span>&gt; map;</span><br></pre></td></tr></table></figure>\n<h3 id=\"常量\">常量<a title=\"#常量\" href=\"#常量\"></a></h3>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 编译期常量，一般用“static const”修饰，表示不可修改</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> PI = <span class=\"number\">3.14159</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 惰性初始化常量，和java的final类似，常用来修饰对象，确保对象不容易修改。</span></span><br><span class=\"line\"><span class=\"keyword\">final</span> pi;</span><br><span class=\"line\">pi = <span class=\"number\">3.14159</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"空安全\">空安全<a title=\"#空安全\" href=\"#空安全\"></a></h3>\n<p>空安全在代码编辑阶段帮助我们提前发现可能出现的空异常问题，但这并不意味着程序不会出现空异常。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 明确表示a不能为空</span></span><br><span class=\"line\"><span class=\"built_in\">int</span> a; </span><br><span class=\"line\"><span class=\"comment\">// 代码编写过程中不可以直接赋值null，否则直接报红</span></span><br><span class=\"line\"><span class=\"comment\">// a = null; //错误写法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 允许b为空</span></span><br><span class=\"line\"><span class=\"built_in\">int?</span> b;</span><br><span class=\"line\">b = <span class=\"keyword\">null</span>; <span class=\"comment\">// 允许程序编写和编译，但不保证编译运行后报错。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对象属性调用</span></span><br><span class=\"line\">UserInfo? userInfo = UserInfo.fromJson(...);</span><br><span class=\"line\"><span class=\"comment\">// String? name = userInfo.name; // 错误写法，因为userInfo有可能为空，所以编译器不允许直接调用。</span></span><br><span class=\"line\"><span class=\"built_in\">String?</span> name = userInfo?.name; <span class=\"comment\">// 正确写法</span></span><br><span class=\"line\"><span class=\"built_in\">String?</span> name = userInfo!.name; <span class=\"comment\">// 正确写法，此时开发完全需要保证userInfo不为空，不推荐，迫不得已采用。</span></span><br><span class=\"line\"><span class=\"built_in\">String</span> name = userInfo?.name??<span class=\"string\">&#x27;&#x27;</span>; <span class=\"comment\">// name有可能为空，但是接收对象是不允许为空的，所以如果为空给一个默认值。</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"运算符与类型转换\">运算符与类型转换<a title=\"#运算符与类型转换\" href=\"#运算符与类型转换\"></a></h2>\n<h3 id=\"运算符\">运算符<a title=\"#运算符\" href=\"#运算符\"></a></h3>\n<p>“非”、“算术”、“关系”、“条件”、“逻辑”、“赋值”、“逗号”七种运算符使用和Java大差不差。</p>\n<p>赋值判空&quot;??&quot;</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span> name = userInfo?.name ?? <span class=\"string\">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类型判断和转换\">类型判断和转换<a title=\"#类型判断和转换\" href=\"#类型判断和转换\"></a></h3>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">类型判断</span></span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(b <span class=\"keyword\">is</span> <span class=\"built_in\">String</span>)&#123;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;b是字符串类型&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">as 强转</span></span></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = getPersion();</span><br><span class=\"line\"><span class=\"keyword\">if</span>(p <span class=\"keyword\">is</span> Person)&#123;</span><br><span class=\"line\">    (p <span class=\"keyword\">as</span> Person).printInfo();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">字符串转int</span></span></span><br><span class=\"line\"><span class=\"built_in\">int</span> myNum=<span class=\"built_in\">int</span>.parse(<span class=\"string\">&#x27;123&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">数字转String</span></span></span><br><span class=\"line\"><span class=\"built_in\">String</span> str = <span class=\"built_in\">num</span>.toString();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">Dart中0可以作为被除数，不会报错，并且打印出Nan,可以用此判断是否是被除数为0.</span></span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a=<span class=\"number\">0</span>/<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a);<span class=\"comment\">//打印出Nan，不会报错</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"遍历\">遍历<a title=\"#遍历\" href=\"#遍历\"></a></h2>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">for循环除了常规的&quot;fori&quot;形式还有&quot;for in&quot;.</span></span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">List</span>)&#123;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(item);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"函数\">函数<a title=\"#函数\" href=\"#函数\"></a></h2>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">可选参数，方括号里面的参数都是可选参数，可以定义默认值</span></span></span><br><span class=\"line\"><span class=\"built_in\">String</span> getPersonInfo(<span class=\"built_in\">String</span> name, [<span class=\"built_in\">int</span> age=<span class=\"number\">20</span>, <span class=\"built_in\">String</span> sex])&#123;</span><br><span class=\"line\">    <span class=\"comment\">// todo ...</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">把一个方法当作参数，常用于回调</span></span></span><br><span class=\"line\">fun1()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;fun------&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fun2(fun)&#123;</span><br><span class=\"line\">  fun();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">箭头函数（lambda表达式），注意箭头函数只能有一条语句</span></span></span><br><span class=\"line\">list.forEach((value)=&gt;<span class=\"built_in\">print</span>(<span class=\"string\">&quot;value=<span class=\"subst\">$value</span>&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">匿名函数</span></span></span><br><span class=\"line\"><span class=\"keyword\">var</span> printNum2=(<span class=\"built_in\">int</span> i)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">printNum2(<span class=\"number\">123</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">闭包</span></span></span><br><span class=\"line\"><span class=\"comment\">///</span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">问题：</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">1.全局变量特点:全局变量常驻内存、全局变量污染全局</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">2.局部变量的特点:不常驻内存会被垃圾机制回收，不会污染全局</span></span></span><br><span class=\"line\"><span class=\"comment\">///</span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">需求：</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">1.局部变量常驻内存</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">2.不污染内存</span></span></span><br><span class=\"line\"><span class=\"comment\">/// </span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">闭包可以解决。闭包：函数嵌套函数，内部函数会调用外部函数的变量或参数，变量或参数不会被系统回收(不会释放内存)。</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">闭包写法：函数嵌套函数，并return 里面的函数，这样就形成了闭包</span></span></span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"comment\">//闭包</span></span><br><span class=\"line\">  fun()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a=<span class=\"number\">123</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>()&#123;</span><br><span class=\"line\">      a++;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(a);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"keyword\">var</span> b=fun();</span><br><span class=\"line\">  b();<span class=\"comment\">//124</span></span><br><span class=\"line\">  b();<span class=\"comment\">//125</span></span><br><span class=\"line\">  b();<span class=\"comment\">//126</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"类\">类<a title=\"#类\" href=\"#类\"></a></h2>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">常规构造函数，和java一样</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">    Person(<span class=\"built_in\">int</span> age, <span class=\"built_in\">String</span> name)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">构造函数简写</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">    Person(<span class=\"keyword\">this</span>.age, <span class=\"keyword\">this</span>.name)&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">命名构造函数</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">    Person(<span class=\"keyword\">this</span>.age, <span class=\"keyword\">this</span>.name)&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Person.info()&#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;age=<span class=\"subst\">$age</span>,name=<span class=\"subst\">$name</span>&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/// <span class=\"markdown\">命名构造函数可以有多个</span></span></span><br><span class=\"line\">    Person.setAge(<span class=\"keyword\">this</span>.age)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;setAge age=<span class=\"subst\">$age</span>&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">getter和setter修饰符</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">    Person(<span class=\"keyword\">this</span>.age, <span class=\"keyword\">this</span>.name)&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/// <span class=\"markdown\">可直接通过属性的方式访问，例如 p.theAge,</span></span></span><br><span class=\"line\">    <span class=\"keyword\">get</span> theAge&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/// <span class=\"markdown\">p.forName(&#x27;张三&#x27;);</span></span></span><br><span class=\"line\">    <span class=\"keyword\">set</span> forName(str)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">级联（链式）调用（对象可以连续调用他的属性或方法）</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">int</span> age;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> name;</span><br><span class=\"line\">    Person()&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span></span><br><span class=\"line\">          ..age = <span class=\"number\">20</span></span><br><span class=\"line\">          ..name = <span class=\"string\">&#x27;张三&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">抽象类</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\"><span class=\"bullet\">1.</span> dart中的抽象方法不能用abstract声明，Dart中没有方法体的方法我们称为抽象方法；</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\"><span class=\"bullet\">2.</span> 抽象类用extends继承</span></span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span></span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">抽象方法，无方法体，子类必须实现</span></span></span><br><span class=\"line\">  eat();</span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">普通方法</span></span></span><br><span class=\"line\">  printInfo()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我是一个抽象类里面的普通方法&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">接口</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\"><span class=\"bullet\">1.</span> dart的接口没有interface关键字定义接口，而是普通类或抽象类都可以作为接口被实现。</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\"><span class=\"bullet\">2.</span> 接口类使用implements关键字进行实现，会将普通类和抽象中的属性的方法全部需要覆写一遍。</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\"><span class=\"bullet\">3.</span> 建议使用抽象类定义接口。因为抽象类可以定义抽象方法，普通类不可以，所以一般如果要实现像Java接口那样的方式，一般会使用抽象类。</span></span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span></span>&#123;</span><br><span class=\"line\">  eat();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Persion</span> <span class=\"keyword\">implements</span> <span class=\"title\">Animal</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@override</span></span><br><span class=\"line\">    eat()&#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;吃榴莲&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">mixins多继承</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">mixins类可以实现多继承，目的就是在一个类中混入其他类的功能。</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\"><span class=\"bullet\">1.</span> mixins的类只能继承自Object，不能继承其他类。</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\"><span class=\"bullet\">2.</span> 作为mixins的类不能有构造函数</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\"><span class=\"bullet\">3.</span> mixins类可以用mixins代替class声明一个mixin类，也可以用普通的类（继承自Object）作为mixins类</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\"><span class=\"bullet\">4.</span> 当继承的多个类中有同样的方法时，谁排在最后则调用谁的函数。</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\"><span class=\"bullet\">5.</span> 子类多继承采用with关键字来实现</span></span></span><br><span class=\"line\"><span class=\"keyword\">mixin</span> A &#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span> info=<span class=\"string\">&quot;this is A&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printA()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;A&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> printB()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;B&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C</span> <span class=\"title\">with</span> <span class=\"title\">A</span>,<span class=\"title\">B</span></span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">泛型，和java使用类似，不在多说</span></span></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"私有方法和私有属性\">私有方法和私有属性<a title=\"#私有方法和私有属性\" href=\"#私有方法和私有属性\"></a></h3>\n<p>在属性或者方法名前加<code>_</code>表示私有。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">int</span> _age=<span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">void</span> _getName()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"库\">库<a title=\"#库\" href=\"#库\"></a></h2>\n<p>引入库采用<code>import</code>字段引入，一个dart文件就是一个库，因此平时开发时在一个dart文件中引入另外一个dart文件方法或属性就要引库。</p>\n<p>例如 lib/person.dart:</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> getName()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;张三&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> getAge()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> getSex()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>引入库场景：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">普通引入</span></span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:lib/person.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">冲突解决，当引入两个库中有相同名称标识符的时候会发生冲突，可使用as关键字来指定库的前缀。</span></span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:lib/person1.dart&#x27;</span> <span class=\"keyword\">as</span> person1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">部分导入，如果只需要导入库的一部分，有两种模式：</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\"><span class=\"bullet\">1.</span> 只导入需要的部分，使用show关键字</span></span></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\"><span class=\"bullet\">2.</span> 隐藏不需要的部分，使用hide关键字</span></span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/person.dart&#x27;</span> <span class=\"keyword\">show</span> getAge;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;lib/person.dart&#x27;</span> <span class=\"keyword\">hide</span> getName;  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"异步\">异步<a title=\"#异步\" href=\"#异步\"></a></h2>\n<p>dart是单线程，不能向java一样开启多个线程，dart的异步采用<code>async</code>、<code>await</code>来修饰。</p>\n<ul>\n<li>async是让方法变成异步。</li>\n<li>await是等待异步方法执行完成。</li>\n</ul>\n<p>注：只有async方法才能使用await关键字调用方法</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = <span class=\"keyword\">await</span> testAsync();</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(result);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">获取async修饰的返回值采用Future类型接收，不写的话，默认也会给一个Future类型</span></span></span><br><span class=\"line\">Future&lt;<span class=\"built_in\">String</span>&gt; testAsync() <span class=\"keyword\">async</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello async&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"Flutter状态管理器","link":"posts/1642727866"},"next":{"title":"Flutter生命周期","link":"posts/1642687671"},"plink":"https://blog.ixin.run/posts/1642687720/","toc":[{"id":"注释","title":"注释","index":"1"},{"id":"变量与常量","title":"变量与常量","index":"2","children":[{"id":"变量","title":"变量","index":"2.1"},{"id":"常量","title":"常量","index":"2.2"},{"id":"空安全","title":"空安全","index":"2.3"}]},{"id":"运算符与类型转换","title":"运算符与类型转换","index":"3","children":[{"id":"运算符","title":"运算符","index":"3.1"},{"id":"类型判断和转换","title":"类型判断和转换","index":"3.2"}]},{"id":"遍历","title":"遍历","index":"4"},{"id":"函数","title":"函数","index":"5"},{"id":"类","title":"类","index":"6","children":[{"id":"私有方法和私有属性","title":"私有方法和私有属性","index":"6.1"}]},{"id":"库","title":"库","index":"7"},{"id":"异步","title":"异步","index":"8"}],"reward":true,"copyright":{"author":"乂星人","link":"<a href=\"https://blog.ixin.run/posts/1642687720/\" title=\"Flutter开发语言Dart学习\">https://blog.ixin.run/posts/1642687720/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}