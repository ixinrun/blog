{"title":"Flutter开发必知必会","date":"2022-01-19T15:45:26.000Z","date_formatted":{"ll":"2022年1月19日","L":"2022/01/19","MM-DD":"01-19"},"link":"posts/1642607126","comments":true,"categories":["Flutter"],"updated":"2022-02-05T09:14:01.710Z","content":"<p>如果说Java是面向对象，那么Flutter就是面向组件，一切皆组件，那么多组件怎么学习呢，这里我就把高频使用的组件、方法、以及pub包整理一下，主要是能够快速上手和入门。</p>\n<a id=\"more\"></a>\n<h2 id=\"常用widget\">常用Widget<a title=\"#常用widget\" href=\"#常用widget\"></a></h2>\n<h3 id=\"基组件\">基组件<a title=\"#基组件\" href=\"#基组件\"></a></h3>\n<ul>\n<li>StatelessWidget（无状态的，一次渲染绘制）</li>\n<li>StatefulWidget（有状态的，可多次渲染绘制）</li>\n</ul>\n<p>flutter大部分组件都是间接或者直接继承于这两个组件。</p>\n<h3 id=\"门户组件\">门户组件<a title=\"#门户组件\" href=\"#门户组件\"></a></h3>\n<ul>\n<li>MaterialApp（android风格）</li>\n<li>CupertinoApp（iOS风格）</li>\n</ul>\n<p>Material风格基础框架组件，Flutter应用入口配置，例如标题、主题，主界面等。常用的“Scaffold”、“AppBar”、“TabBar”、“BottomNavigationBar”等都需要再此基础组件下实现。</p>\n<h3 id=\"基础组件\">基础组件<a title=\"#基础组件\" href=\"#基础组件\"></a></h3>\n<ul>\n<li>文本：Text</li>\n<li>文本输入：TextField</li>\n<li>按钮：RaisedButton（悬浮按钮）、TextButton（扁平按钮）、OutlineButton（边框按钮）、IconButton（icon按钮）</li>\n<li>图片：Image</li>\n<li>单/复选框：Radio（单选框）、Checkbox（复选框）</li>\n<li>进度条：LinearProgressIndicator（条形进度条）、CircularProgressIndicator（原型进度条）</li>\n<li>分割线：Divider</li>\n<li>显隐控制：Visibility</li>\n</ul>\n<h3 id=\"布局组件\">布局组件<a title=\"#布局组件\" href=\"#布局组件\"></a></h3>\n<ul>\n<li>线性布局：Row（水平）、Column（垂直）</li>\n<li>弹性布局：Flex</li>\n<li>层叠布局：Stack（层叠父容器）、Positioned（孩子精细化定位）</li>\n<li>定位布局：Align（上下左右任意位置）、Center（居中）</li>\n<li>空间占用布局：Expanded（剩余空间、比例分割）</li>\n<li>尺寸布局：SizedBox（确定宽高，可代替Margin的性质）</li>\n</ul>\n<h3 id=\"容器组件\">容器组件<a title=\"#容器组件\" href=\"#容器组件\"></a></h3>\n<ul>\n<li>组合容器：Container（主要用于大小、padding、背景、装饰等多条件组合修饰）</li>\n<li>脚手架：Scaffold（页面脚手架，可捆绑appbar）</li>\n<li>滚动容器：SingleChildScrollView（单一元素滚动）、CustomScrollView（复合滚动，例如GridView+ListView）、ListView（列表）、GridView（九宫格）</li>\n</ul>\n<h3 id=\"点击组件\">点击组件<a title=\"#点击组件\" href=\"#点击组件\"></a></h3>\n<ul>\n<li>InkWell（常用，有点击波浪效果）</li>\n<li>GestureDetector（手势，方法更丰富，无点击效果）</li>\n</ul>\n<h3 id=\"其他组件\">其他组件<a title=\"#其他组件\" href=\"#其他组件\"></a></h3>\n<ul>\n<li>SafeArea（常用于刘海屏遮挡腾出安全空间，自定义标题栏中经常用到）</li>\n<li>WillPopScope（导航返回拦截）</li>\n</ul>\n<p>更多组件可参看官方文档：<a href=\"https://flutter.cn/docs/development/ui/widgets\">https://flutter.cn/docs/development/ui/widgets</a></p>\n<h2 id=\"静态路由配置\">静态路由配置<a title=\"#静态路由配置\" href=\"#静态路由配置\"></a></h2>\n<p>定义静态路由</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> staticRoutes = &#123;</span><br><span class=\"line\">  WelcomePage.routeName: (context) =&gt; WelcomePage(),</span><br><span class=\"line\">  LoginPage.routeName: (context) =&gt; LoginPage(),</span><br><span class=\"line\">  HomePage.routeName: (context) =&gt; HomePage(),</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>main入口引用</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatelessWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaterialApp(</span><br><span class=\"line\">      title: <span class=\"string\">&#x27;My Flutter&#x27;</span>,</span><br><span class=\"line\">      routes: staticRoutes,</span><br><span class=\"line\">      home: HomePage(),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其他页面调用进行跳转</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onPressed: () &#123;</span><br><span class=\"line\">    Navigator.pushNamed(context, LoginPage.routeName);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"一些高频方法\">一些高频方法<a title=\"#一些高频方法\" href=\"#一些高频方法\"></a></h2>\n<p>1.延迟获取：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Future.delayed(<span class=\"built_in\">Duration</span>(seconds: <span class=\"number\">2</span>), () &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">Timer(<span class=\"built_in\">Duration</span>(seconds: <span class=\"number\">2</span>), ()&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>2.渲染结束监听</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#39;package:flutter&#x2F;scheduler.dart&#39;;</span><br><span class=\"line\">@override</span><br><span class=\"line\">void initState() &#123;</span><br><span class=\"line\">  super.initState();</span><br><span class=\"line\">  SchedulerBinding.instance.addPostFrameCallback((_) &#x3D;&gt; &#123;&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用pub包整理\">常用pub包整理<a title=\"#常用pub包整理\" href=\"#常用pub包整理\"></a></h2>\n<ul>\n<li>permission_handler:  权限申请</li>\n<li>extended_image:  图片加载</li>\n<li>photo_view:  预览图片</li>\n<li>flutter_image_compress:  图片压缩</li>\n<li>flutter_smart_dialog:  自定义加载框、toast、弹框</li>\n<li>package_info:  获取应用程序包信息（应用名，包名，版本号，构建号等等）</li>\n<li>path_provider: 获取文件系统中常用的目录路径</li>\n<li>flutter_easyrefresh: 下拉刷新上拉加载</li>\n<li>url_launcher: 打电话、打开网址、发送邮件、信息</li>\n<li>dio: 网络库</li>\n<li>crypto: 加解密</li>\n<li>get: 状态管理器GetX</li>\n</ul>\n<h3 id=\"其他开源ui库\">其他开源UI库<a title=\"#其他开源ui库\" href=\"#其他开源ui库\"></a></h3>\n<ul>\n<li><a href=\"https://www.jianshu.com/p/2200185df33d\">https://www.jianshu.com/p/2200185df33d</a></li>\n</ul>\n<h2 id=\"json转实体\">Json转实体<a title=\"#json转实体\" href=\"#json转实体\"></a></h2>\n<ol>\n<li>IDE插件：FlutterJsonBeanFactory</li>\n<li>json to dart（支持空安全）：<a href=\"https://javiercbk.github.io/json_to_dart/\">https://javiercbk.github.io/json_to_dart/</a></li>\n<li>pub插件：json_serializable</li>\n</ol>\n<h2 id=\"开发技巧\">开发技巧<a title=\"#开发技巧\" href=\"#开发技巧\"></a></h2>\n<ol>\n<li>开发时注重私有变量和final的使用</li>\n<li>一些常用的组件尽可能的进行封装，例如标题栏、toast</li>\n<li>开发过程中功能模块抽取，避免套娃式望海</li>\n<li>开发过程中尽可能widget和功能分开保持代码整洁</li>\n</ol>\n<h3 id=\"其他\">其他<a title=\"#其他\" href=\"#其他\"></a></h3>\n<p>androidstudio中快速生成代码块：</p>\n<ul>\n<li>快速生成StatelessWidget，输入&quot;stless&quot;</li>\n<li>快速生成StatefulWidget，输入&quot;stful&quot;</li>\n</ul>\n<p>stack是层叠布局，使用Positioned必须给定子widget具体的宽高，否则无法定位。</p>\n<h2 id=\"学习资源\">学习资源<a title=\"#学习资源\" href=\"#学习资源\"></a></h2>\n<ol>\n<li>官方文档：<a href=\"https://flutter.dev/docs\">https://flutter.dev/docs</a></li>\n<li>中文文档：<a href=\"https://flutter.cn/#\">https://flutter.cn/#</a></li>\n<li>flutter pub搜索仓库：<a href=\"https://pub.flutter-io.cn/\">https://pub.flutter-io.cn/</a></li>\n<li>flutter SDK仓库：<a href=\"https://github.com/flutter/flutter\">https://github.com/flutter/flutter</a></li>\n<li>《Flutter实战》：<a href=\"https://book.flutterchina.club/\">https://book.flutterchina.club/</a></li>\n</ol>\n","prev":{"title":"Flutter生命周期","link":"posts/1642687671"},"next":{"title":"Flutter环境搭建","link":"posts/1642515162"},"plink":"https://blog.ixin.run/posts/1642607126/","toc":[{"id":"常用widget","title":"常用Widget","index":"1","children":[{"id":"基组件","title":"基组件","index":"1.1"},{"id":"门户组件","title":"门户组件","index":"1.2"},{"id":"基础组件","title":"基础组件","index":"1.3"},{"id":"布局组件","title":"布局组件","index":"1.4"},{"id":"容器组件","title":"容器组件","index":"1.5"},{"id":"点击组件","title":"点击组件","index":"1.6"},{"id":"其他组件","title":"其他组件","index":"1.7"}]},{"id":"静态路由配置","title":"静态路由配置","index":"2"},{"id":"一些高频方法","title":"一些高频方法","index":"3"},{"id":"常用pub包整理","title":"常用pub包整理","index":"4","children":[{"id":"其他开源ui库","title":"其他开源UI库","index":"4.1"}]},{"id":"json转实体","title":"Json转实体","index":"5"},{"id":"开发技巧","title":"开发技巧","index":"6","children":[{"id":"其他","title":"其他","index":"6.1"}]},{"id":"学习资源","title":"学习资源","index":"7"}],"reward":true,"copyright":{"author":"乂星人","link":"<a href=\"https://blog.ixin.run/posts/1642607126/\" title=\"Flutter开发必知必会\">https://blog.ixin.run/posts/1642607126/</a>","license":"本文遵循<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\"rel=\"external nofollow\" target=\"_blank\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接及本声明。"}}